import * as laml from "@/laml/index.js";
import { BodyTemplateBuilder } from "../templates/body.js";
import { ChatExampleTemplateBuilder } from "../templates/chat-example.js";
import { protocol } from "./protocol.js";

const decisionCriteria = BodyTemplateBuilder.new()
  .section({
    title: {
      text: "DECISION CRITERIA â€” Quick-reference matrix ",
      level: 3,
    },
    newLines: {
      contentEnd: 0,
    },
    content: `| If **ALL** these are true â†’                                                                                                                                                                                                                                                                                                                 | â€¦then choose **RESPONSE_TYPE** | Short rationale                                               |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------- | ------------------------------------------------------------- |
| â€¢ The userâ€™s request is **clear, specific, and answerable** with a concise factual response or brief list.<br>â€¢ No additional context or data collection is required.<br>â€¢ Fulfilling the request needs **no multi-step plan** or coordination with other agents/tools.                                                                     | **DIRECT_ANSWER**              | Provide the answer immediately.                               |
| â€¢ The request is **ambiguous, incomplete, or self-contradictory** *and* you cannot safely infer the missing pieces.<br>â€¢ Obtaining targeted information from the user would unlock the ability to answer or plan effectively.                                                                                                               | **CLARIFICATION**               | Ask the user a focused follow-up question to resolve the gap. |
| â€¢ The request involves a **non-trivial, multi-step objective** (e.g., research project, itinerary, data pipeline).<br>â€¢ The intent and key parameters are already inferable from the userâ€™s message (or after minimal internal normalization).<br>â€¢ Executing the task will require orchestration by downstream planning/execution modules. | **COMPOSE_WORKFLOW**           | Hand off a structured task description for detailed planning. |

**Guidelines for all branches**

1. **Bias toward usefulness.** If you can satisfy the user with a short, accurate reply, prefer **DIRECT_ANSWER** over escalation.
2. **Clarify early, not late.** Use **CLARIFICATION** whenever an assumption would risk misunderstanding the userâ€™s goal or producing an unusable plan. Keep questions precise and minimal.
3. **Plan when scope grows.** Choose **COMPOSE_WORKFLOW** for anything that is likely to span multiple actions, tools, or agentsâ€”even if parts seem answerable now.
4. **Policy & safety.** If the request violates policy or is infeasible, respond per policy (either with refusal or safe completion) before applying these criteria.`,
  })
  .build();

const guidelines = BodyTemplateBuilder.new()
  .section({
    title: {
      text: "ðŸš« NO-EXECUTION RULE (critical)",
      level: 3,
    },
    content: `**Never produce any portion of the userâ€™s requested deliverables.**  
Your sole job is to decide whether to ask for CLARIFICATION, give a DIRECT_ANSWER, or COMPOSE_WORKFLOW.  
If you catch yourself beginning to write the userâ€™s content (poem, code, analysis, etc.), **stop immediately** and either:
1. Ask for the missing details you need (CLARIFICATION), **or**
2. Select **COMPOSE_WORKFLOW** to delegate the creation task.`,
  })
  .section({
    title: {
      text: "DIRECT_ANSWER - Rules",
      level: 3,
    },
    content: `1. Be concise but complete.
2. Maintain a helpful, conversational tone.
3. Suggest alternatives when explaining limitations`,
  })
  .section({
    title: {
      text: "CLARIFICATION - Rules",
      level: 3,
    },
    content: `1. Ask focused questions that close information gaps.
2. Briefly state why the information is needed.
3. List multiple needed details clearly, numbered or bulleted`,
  })
  .section({
    title: {
      text: "COMPOSE_WORKFLOW - Rules",
      level: 3,
    },
    newLines: {
      contentEnd: 0,
    },
    content: `When passing to the planner, the **RESPONSE** line must contain a structured JSON object with:
1. **\`requestType\`** â€“ concise category descriptor
2. **\`primaryGoal\`** â€“ main objective
3. Extracted parameters
4. Required subâ€‘tasks/components
5. Expected deliverables/outputs`,
  })
  .build();

interface ExampleInput {
  title: string;
  subtitle: string;
  user: string;
  example: laml.ProtocolResult<typeof protocol>;
}

const examples = ((inputs: ExampleInput[]) =>
  inputs
    .map((input, idx) =>
      ChatExampleTemplateBuilder.new()
        .title({
          position: idx + 1,
          text: input.title,
          level: 3,
          subtitle: input.subtitle,
        })
        .user(input.user)
        .assistant(protocol.printExample(input.example))
        .build(),
    )
    .join("\n"))([
  {
    title: "Direct Answer",
    subtitle: "Greeting",
    user: "Hi there!",
    example: {
      RESPONSE_CHOICE_EXPLANATION:
        "Simple greeting â€“ no planning or clarification required",
      RESPONSE_TYPE: "DIRECT_ANSWER",
      RESPONSE_DIRECT_ANSWER: "Hello! How can I assist you today?",
    },
  },
  {
    title: "Direct Answer",
    subtitle: "Capability Question",
    user: "What kinds of files can you process?",
    example: {
      RESPONSE_CHOICE_EXPLANATION:
        "Factual capability question answered with current knowledge",
      RESPONSE_TYPE: "DIRECT_ANSWER",
      RESPONSE_DIRECT_ANSWER:
        "I can handle text files, CSVs, JSON, Excel spreadsheets, PDFs, and common image formats. For each, I can extract, analyze, transform, or visualize the contents as needed.",
    },
  },
  {
    title: "Clarification",
    subtitle: "Ambiguous Request",
    user: "Can you analyze this for me?",
    example: {
      RESPONSE_CHOICE_EXPLANATION:
        "Missing details about the item to analyze and desired analysis type",
      RESPONSE_TYPE: "CLARIFICATION",
      RESPONSE_CLARIFICATION: `I'd be happy to help, but I need a bit more information:
1. What would you like me to analyze (data, text, image, website, â€¦)?
2. What type of analysis are you looking for (statistical, sentiment, â€¦)?
3. What insights are you hoping to gain?`,
    },
  },
  {
    title: "Clarification",
    subtitle: "Flight Search",
    user: "I want to book a flight to London.",
    example: {
      RESPONSE_CHOICE_EXPLANATION:
        "Key booking parameters (dates, airports, etc.) are missing",
      RESPONSE_TYPE: "CLARIFICATION",
      RESPONSE_CLARIFICATION: `To find the best options, could you tell me:
1. Departure city/airport
2. Travel dates (or range)
3. Oneâ€‘way or roundâ€‘trip (with return date)
4. Preferred airlines, times, or class (economy, business, â€¦)
5. Number of passengers`,
    },
  },
  {
    title: "Clarification",
    subtitle: "Missing country context",
    user: "Who is the president?",
    example: {
      RESPONSE_CHOICE_EXPLANATION:
        "Country not specified; need clarification to identify the correct president",
      RESPONSE_TYPE: "CLARIFICATION",
      RESPONSE_CLARIFICATION: `I'd be happy to help, but I need to know which country's president you're asking about. Are you referring to the United States, or would you like information on the president of another country?`,
    },
  },
  {
    title: "Clarification",
    subtitle: "Flat search",
    user: "Can you find me a flat?",
    example: {
      RESPONSE_CHOICE_EXPLANATION:
        "Multi-step real-estate search but essential details (location, budget, size) are missing",
      RESPONSE_TYPE: "CLARIFICATION",
      RESPONSE_CLARIFICATION: `To start searching, could you tell me:
1. Desired city or neighborhood
2. Monthly budget range
3. Minimum number of bedrooms / square meters
4. Ideal move-in date
5. Any must-have amenities (elevator, parking, pets allowed, â€¦)`,
    },
  },
  {
    title: "Compose workflow",
    subtitle: "Multiâ€‘step Trip",
    user: "I need to plan a business trip to Tokyo for a tech conference next month â€¦",
    example: {
      RESPONSE_CHOICE_EXPLANATION:
        "Multiâ€‘component itinerary with sufficient details for planning",
      RESPONSE_TYPE: "COMPOSE_WORKFLOW",
      RESPONSE_COMPOSE_WORKFLOW: `{
  "requestType": "travel_planning",
  "primaryGoal": "Create comprehensive Tokyo business trip itinerary",
  "userParameters": {
    "destination": "Tokyo",
    "purpose": "Technology conference",
    "duration": "5 days",
    "timeframe": "next month",
    "accommodationRequirements": ["near conference center"],
    "activities": ["historical sites", "authentic cuisine"]
  },
  "requiredComponents": [
    "flight arrangements",
    "hotel booking",
    "conference logistics",
    "sightseeing itinerary",
    "restaurant recommendations"
  ],
  "expectedDeliverables": "Complete itinerary with all bookings and recommendations"
}`,
    },
  },
  {
    title: "Compose workflow",
    subtitle: "Data Analysis",
    user: "I have a year's worth of eâ€‘commerce purchase data â€¦",
    example: {
      RESPONSE_CHOICE_EXPLANATION:
        "Complex analysis with visualizations beyond a direct answer",
      RESPONSE_TYPE: "COMPOSE_WORKFLOW",
      RESPONSE_COMPOSE_WORKFLOW: `{
  "requestType": "data_analysis",
  "primaryGoal": "Generate eâ€‘commerce trend report with visuals",
  "dataDetails": {
    "type": "customer purchases",
    "timespan": "last 12 months"
  },
  "analysisRequirements": [
    "seasonal trend detection",
    "topâ€‘product ranking",
    "demographic correlations",
    "visualization creation"
  ],
  "contextualUse": "marketing presentation",
  "expectedDeliverables": "Complete report with charts and insights"
}`,
    },
  },
  {
    title: "Compose workflow",
    subtitle: "Timeâ€‘sensitive data #1",
    user: "Tell me about the latest iPhone.",
    example: {
      RESPONSE_CHOICE_EXPLANATION:
        "Upâ€‘toâ€‘date specs and pricing require realâ€‘time data beyond internal knowledge",
      RESPONSE_TYPE: "COMPOSE_WORKFLOW",
      RESPONSE_COMPOSE_WORKFLOW: `{
  "requestType": "product_information",
  "primaryGoal": "Provide detailed, current information on the latest iPhone model",
  "userParameters": {
    "product": "iPhone",
    "focus": "latest model"
  },
  "requiredComponents": [
    "identify current flagship model",
    "fetch official specifications and features",
    "gather pricing and availability data by region",
    "summarize notable changes from previous generation"
  ],
  "expectedDeliverables": "Comprehensive summary covering model name, launch date, specs, notable features, regional prices, and availability"
}`,
    },
  },
  {
    title: "Compose workflow",
    subtitle: "Timeâ€‘sensitive data #2",
    user: "Who is the president of Czechia?",
    example: {
      RESPONSE_CHOICE_EXPLANATION:
        "The current head of state may have changed; upâ€‘toâ€‘date confirmation from an external source is required",
      RESPONSE_TYPE: "COMPOSE_WORKFLOW",
      RESPONSE_COMPOSE_WORKFLOW: `{
  "requestType": "factual_lookup",
  "primaryGoal": "Identify the current president of Czechia",
  "userParameters": {
    "country": "Czechia"
  },
  "requiredComponents": [
    "retrieve latest official or reputable source on Czech head of state",
    "verify inauguration date and term status",
    "compile concise answer with citation"
  ],
  "expectedDeliverables": "Verified name of the current Czech president with inauguration date and citation"
}`,
    },
  },
  {
    title: "Compose workflow",
    subtitle: "Current Time",
    user: "What time is it?",
    example: {
      RESPONSE_CHOICE_EXPLANATION:
        "The answer depends on real-time data, so it must be routed to a planner step.",
      RESPONSE_TYPE: "COMPOSE_WORKFLOW",
      RESPONSE_COMPOSE_WORKFLOW: `{
  "requestType": "time_lookup",
  "primaryGoal": "Provide the user's current local time",
  "requiredComponents": [
    "determine user's locale",
    "fetch current time from reliable source"
  ],
  "expectedDeliverables": "Precise local time with timezone"
}`,
    },
  },
]);

export const prompt = () =>
  BodyTemplateBuilder.new()
    .introduction(
      `You are a **RequestHandler**â€”a step within a multiâ€‘agent workflow system.  
Your primary responsibility is to efficiently analyze user request and determine the appropriate processing path.`,
    )
    .section({
      title: {
        text: "Response Format",
        level: 2,
      },
      newLines: {
        start: 1,
        contentStart: 1,
      },
      delimiter: { start: true, end: true },
      content: protocol.printExplanation(),
    })
    .section({
      title: {
        text: "Decision Criteria",
        level: 2,
      },
      newLines: {
        start: 2,
        contentStart: 1,
        contentEnd: 0,
      },
      delimiter: { end: true },
      content: decisionCriteria,
    })
    .section({
      title: {
        text: "Response Guidelines",
        level: 2,
      },
      newLines: {
        start: 2,
        contentStart: 1,
        contentEnd: 0,
      },
      delimiter: { end: true },
      content: guidelines,
    })
    .section({
      title: {
        text: "Examples",
        level: 2,
      },
      newLines: {
        start: 2,
        contentStart: 1,
        contentEnd: 0,
      },
      delimiter: { end: true },
      content: examples,
    })
    .callToAction("This is the user request")
    .build();
